---
pageClass: page-post
title: Bower ain't scary
bannerImage: 1440x785.gif
pubDate: 23rd Sept, 2014
category: Tutorials
---

{{#extend "layout-post"}}

{{#content "post-summary"}}
Another in the "Front end ain't scary" series, this post introduces Bower and discusses its uses.
{{/content}}


{{#content "post-content"}}
<h2>Bower, you say?</h2>
<p><a href="http://bower.io" rel="external">Bower</a> is a <em>"package manager for the web"</em> - a tool used for managing dependencies on third party front end libraries such as jQuery and frameworks such as Angular, amongst <em>11355</em>{{#note 1}}{{/note}} more.</p>
<small>{{#note_ref 1}}{{/note_ref}} <a href="http://bower.io/search" rel="external">correct</a> at the time of writing.</small>

<figure>
  <img src="{{assetsUrl}}/{{images}}/blog/bower_logo.png" alt="Bower Logo" />
  <figcaption>Bower ain't scary see - just look at him!</figcaption>
</figure>


<h2>That doesn't sound scary&hellip;</h2>
<p>Give me some credit, Bower isn't exactly something I found <em>scary</em> before but I'll admit that until I dug deeper into what it really was, I pretty much dismissed the idea of using a package manager.</p>

<p>This was more than likely due to:</p>
<ul>
  <li>The (albeit fairly small) learning curve</li>
  <li>Thinking that I'd prefer to manually download packages from their sources in order to have more control over what I install</li>
  <li>The thought of having to convincing colleagues and collaborators to use <strong><em>another</em></strong> new <em>hipster-front-end-thingy</em>.</li>
</ul>

<h2 id="bowering-all-the-things">Bowering all the things.</h2>
<p>So you need just a few commands to get using Bower.</p>
<ol>
  <li>
    <p>Install with <a href="http://nodejs.org" rel="external">NodeJS</a>:</p>
    <code>
      $ npm install bower -g
    </code>
  </li>

  <li>
    <p>Create and enter a directory for your project:</p>
    <code>
      $ mkdir yourProject && cd yourProject
    </code>
  </li>

  <li><p>Initialise Bower in your project then complete the steps that you are asked to do to create your <code class="inline">bower.json</code> file:</p>
    <code>
      $ bower init
    </code>
  </li>

  <li>
    <p>Finally, install and save{{#note 2}}{{/note}} your first package:</p>
    <code>$ bower install sassface --save-dev</code>
  </li>
</ol>

<small>{{#note_ref 2}}{{/note_ref}}Remember in the last step to pass the <code class="inline">--save</code> or <code class="inline">--save-dev</code> flag to save it in your <code class="inline">bower.json</code> and your project.</small>

<h2>Now what?</h2>
<p>Now you have a <code class="inline">bower.json</code> file in the root of your project that looks something a little like this:</p>

<pre>
  <code class="js">  {
    "name": "myProject",
    "version": "1.0.0",
    "authors": [
      "Daniel Furze &lt;daniel@furzeface.com&gt;"
    ],
    "description": "My awesome project.",
    "main": "index.html",
    "keywords": [
      "Bower"
    ],
    "license": "MIT",
    "homepage": "http://daniel.furzeface.com",
    "private": true,
    "ignore": [
      "**/.*",
      "node_modules",
      "bower_components",
      "test",
      "tests"
    ],
    "devDependencies": {
      "sassface": "~1.0.8"
    }
  }
</code>
</pre>

<p>You will also have your first component downloaded to <code class="inline">bower_components</code> - the default directory created by Bower.</p>
<p>To change where your components download to simply create a <code class="inline">.bowerrc</code> file in the same root directory as your <code class="inline">bower.json</code> and add the directory path in json format as shown below:</p>
<pre>
  <code class="js">  {
    "directory" : "site/components"
  }
</code>
</pre>

<p>I tend to leave the rest of the attributes as default in my <code class="inline">.bowerrc</code> but you can check out the <a href="http://bower.io/docs/config" rel="external">.bowerrc documentation</a> for more info.</p>

<h3>Quick tip:</h3>
<p>I usually just hit something like this in command line{{#note 3}}{{/note}} on my Mac:</p>
<code>
  $ echo {\"directory\": \"site\/components\"} | python -m json.tool > .bowerrc
</code>
<small>{{#note_ref 3}}{{/note_ref}}See, command line is <a href="http://daniel.furzeface.com/blog/command-line-aint-scary">mega quick</a>!</small>

<h2>Way to go!</h2>
<p>See, you've just initialised Bower and started using it straight away to manage your front end dependencies!</p>
<p><strong>And it wasn't scary.</strong></p>
<p>As I said before, I was apprehensive at first when looking at using Bower mainly because I didn't see the need to, but since starting work at <a href="http://building-blocks.com" rel="external">Building Blocks</a> I've integrated it into the front end team's workflow to help organise our projects and increase the level of automation - thus reducing the change of human error when downloading and using third party libraries or frameworks.</p>
{{/content}}


{{#content "post-tldr"}}
<p><a href="http://bower.io" rel="external">Bower</a> is a useful tool for managing front end dependencies in a project.</p>

<blockquote class="pullquote">
  Bower: another new hipster-front-end-thingy???
</blockquote>

<p>Use the <a href="#bowering-all-the-things">snippets above</a> to get going with Bower very quickly.</p>
<p>Integrate it into your team's projects to increase automation, reduce human error and keep third party libraries and frameworks up to date very easily.</p>
{{/content}}

{{/extend}}
