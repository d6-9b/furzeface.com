[
  {
    "lazyHack": true
  },
  {
    "projects": [
      {
      "project": "tldrcode.com",
      "owner": "tldrcode",
      "github": "https://github.com/tldrcode/tldrcode.com",
      "description": "A website that provides quick reference to multiple coding languages and libraries.",
      "contributions": "Various JavaScript section additions and amends.",
      "comment": "<p>Today I learned about using <a href=\"https://www.vagrantup.com/\"  rel=\"external\">Vagrant</a>, a tool used to set up and share virtual environments between developers.</p><p>This was used on the project and I’d never used it before and was a bit scared - but being forced to start using it really helped me overcome my apprehension.</p><p>Turns it out was super easy to set up and I think I’ll definitely give it a proper go on a project soon!"
      }
    ]
  },
  {
    "projects": [
      {
      "project": "tldrcode.com",
      "owner": "tldrcode",
      "github": "https://github.com/tldrcode/tldrcode.com",
      "description": "A website that provides quick reference to multiple coding languages and libraries.",
      "contributions": "JavaScript function documentation."
      },
      {
      "project": "gitdown",
      "owner": "gajus",
      "github": "https://github.com/gajus/gitdown",
      "description": "GitHub markdown preprocessor.",
      "contributions": "Amended scripts property in <code class=\"inline\">package.json</code> to allow Travis CI to run tests. Updated project so build will pass.",
      "comment": "<p>This one was good - I wanted to add <a href=\"http://david-dm.org\" rel=\"external\">David dependency badges</a> as an option to the project but in the process of reverse engineering the code I found that some package dependencies weren’t included, so fixed that.</p><p>I then amended the <code class=\"inline\">package.json</code> so that Travis CI could pick up and run tests, as it hadn’t been doing so before. Now the build is passing on this awesome project!</p>"
      }
    ]
  },
  {
    "projects": [
      {
        "project": "gitdown",
        "owner": "gajus",
        "github": "https://github.com/gajus/gitdown",
        "description": "GitHub markdown preprocessor.",
        "contributions": "Added a <a href=\"http://waffle.io\" rel=\"external\">waffle.io</a> badge option."
      },
      {
      "project": "generator-node",
      "owner": "yeoman",
      "github": "https://github.com/yeoman/generator-node",
      "description": "Create a Node.js module with yo, including Mocha unit tests.",
      "contributions": "Implementing a feature for an issue I raised -  <a href=\"https://github.com/yeoman/generator-node/issues/65\" rel=\"external\">#65</a>",
      "comment": "<p>I <a href=\"https://github.com/yeoman/generator-node/issues/65\" rel=\"external\">raised a discussion point</a> a while ago about scaffolding a Node module with a failing test to help trigger the process of writing tests for the module.</p><p>I’ve seen a few Node modules out there with no tests around them and the default passing test left in from <code class=\"inline\">yo node</code> and I’ve been guilty of doing it myself to rush a package out a couple of times.</p><p>I discussed this feature with a couple of the guys on the team before, so I hope this gets accepted and can help."
      }
    ]
  }

]
